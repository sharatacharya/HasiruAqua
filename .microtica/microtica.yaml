stages:
  - clone
  - build
  - deploy

steps:
  Clone:
    type: git-clone
    stage: clone

  PackageComponent:
    title: Package component
    stage: build
    image: aws/codebuild/standard:4.0
    commands:
      - cd .microtica
      - npm install
      - npm run build
      - npm test
      - npm prune --production
    artifacts:
      files:
        package_zip: ./.microtica/
        schema_json: ./.microtica/schema.json

  PushDockerImage:
    type: docker-push
    stage: build
    title: Build and Push Docker Image on Amazon ECR
    image_name: microtica/app
    tag: "{{MIC_PIPELINE_EXECUTION_ID}}"
    dockerfile: ./.microtica/Dockerfile
    registry: ecr

  DeployComponent:
    type: deploy
    target: environment
    stage: deploy
    env_id: "{{ENV_ID}}"
    partial:
        resource_version_overrides:
          StrapiApp: "{{MIC_PIPELINE_EXECUTION_ID}}"